import { useState } from "react";
import type { ChangeEvent, FormEvent } from "react";

interface FormDataState {
  name: string; 
  phone: string;
  files: File[];
}

const ClientForm: React.FC = () => {
  const [step, setStep] = useState<number>(1); // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–≥–∞–º–∏
  const [formData, setFormData] = useState<FormDataState>({
    name: "", 
    phone: "",
    files: [],
  });
  const [otp, setOtp] = useState<string>(""); // OTP-–∫–æ–¥
  const [loading, setLoading] = useState<boolean>(false);
  const [message, setMessage] = useState<string>("");

  // üìå –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  // üìå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {
    const files = e.target.files;
    if (files && files.length > 0) {
      setFormData((prev) => ({ ...prev, files: Array.from(files) }));
    }
  };

  // üìå –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–®–ê–ì 1)
  const sendPhone = async () => {
    setLoading(true);
    setMessage("");

    try {
      const response = await fetch("https://law-f4xw.onrender.com/send-otp", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ phone: formData.phone }),
      });

      const result = await response.json();
      if (response.ok) {
        setMessage("‚úÖ OTP –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
        setStep(2); // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —à–∞–≥ 2
      } else {
        setMessage(`‚ùå –û—à–∏–±–∫–∞: ${result.error}`);
      }
    } catch (error) {
      setMessage("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }

    setLoading(false);
  };

  // üìå –û—Ç–ø—Ä–∞–≤–∫–∞ OTP –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é (–®–ê–ì 2)
  const validateOtp = async () => {
    setLoading(true);
    setMessage("");

    try {
      const response = await fetch("https://law-f4xw.onrender.com/validation", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ phone: formData.phone, otp }),
      });

      const result = await response.json();
      if (response.ok) {
        setMessage("‚úÖ OTP –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!");
        setStep(3); // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —à–∞–≥ 3
      } else {
        setMessage(`‚ùå –û—à–∏–±–∫–∞: ${result.error}`);
      }
    } catch (error) {
      setMessage("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }

    setLoading(false);
  };

  // üìå –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö (–®–ê–ì 3)
  const handleSubmit = async (e: FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setMessage("");

    const data = new FormData();
    data.append("name", formData.name);  
    data.append("phone", formData.phone);
    formData.files.forEach((file) => data.append("files", file));

    try {
      const response = await fetch("https://law-f4xw.onrender.com/clients", {
        method: "POST",
        body: data,
      });

      const result = await response.json();
      if (response.ok) {
        setMessage("‚úÖ –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!");
        setStep(1); // –°–±—Ä–æ—Å –Ω–∞ –ø–µ—Ä–≤—ã–π —à–∞–≥
        setFormData({ name: "",  phone: "", files: [] });
        setOtp("");
      } else {
        setMessage(`‚ùå –û—à–∏–±–∫–∞: ${result.error}`);
      }
    } catch (error) {
      setMessage("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }

    setLoading(false);
  };

  return (
    <div className="container mt-4">
      <h2 className="mb-3">–î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞</h2>

      {message && <div className="alert alert-info">{message}</div>}

      {step === 1 && (
        <div>
          <label className="form-label">–¢–µ–ª–µ—Ñ–æ–Ω</label>
          <input
            type="tel"
            name="phone"
            className="form-control"
            value={formData.phone}
            onChange={handleChange}
            required
          />
          <button onClick={sendPhone} className="btn btn-primary mt-2" disabled={loading}>
            {loading ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å OTP"}
          </button>
        </div>
      )}

      {step === 2 && (
        <div>
          <label className="form-label">–í–≤–µ–¥–∏—Ç–µ OTP</label>
          <div className="d-flex gap-2">
            {[0, 1, 2, 3].map((index) => (
              <input
                key={index}
                type="text"
                maxLength={1}
                className="form-control otp-input"
                value={otp[index] || ""}
                onChange={(e) => {
                  const newOtp = otp.split("");
                  newOtp[index] = e.target.value;
                  setOtp(newOtp.join(""));
                }}
              />
            ))}
          </div>
          <button onClick={validateOtp} className="btn btn-primary mt-2" disabled={loading}>
            {loading ? "–ü—Ä–æ–≤–µ—Ä–∫–∞..." : "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å OTP"}
          </button>
        </div>
      )}

      {step === 3 && (
        <form onSubmit={handleSubmit}>
          <div className="mb-3">
            <label className="form-label">–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è</label>
            <input
              type="text"
              name="name"
              className="form-control"
              value={formData.name}
              onChange={handleChange}
              required
            />
          </div>

          <div className="mb-3">
            <label className="form-label">–§–∞–π–ª—ã</label>
            <input type="file" className="form-control" multiple onChange={handleFileChange} />
          </div>

          <button type="submit" className="btn btn-primary" disabled={loading}>
            {loading ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–î–æ–±–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞"}
          </button>
        </form>
      )}
    </div>
  );
};

export default ClientForm;
